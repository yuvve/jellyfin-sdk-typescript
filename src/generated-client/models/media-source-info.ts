/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 *
 * Jellyfin API
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { IsoType } from './iso-type';
// May contain unused imports in some cases
// @ts-ignore
import type { MediaAttachment } from './media-attachment';
// May contain unused imports in some cases
// @ts-ignore
import type { MediaProtocol } from './media-protocol';
// May contain unused imports in some cases
// @ts-ignore
import type { MediaSourceType } from './media-source-type';
// May contain unused imports in some cases
// @ts-ignore
import type { MediaStream } from './media-stream';
// May contain unused imports in some cases
// @ts-ignore
import type { MediaStreamProtocol } from './media-stream-protocol';
// May contain unused imports in some cases
// @ts-ignore
import type { TransportStreamTimestamp } from './transport-stream-timestamp';
// May contain unused imports in some cases
// @ts-ignore
import type { Video3DFormat } from './video3-dformat';
// May contain unused imports in some cases
// @ts-ignore
import type { VideoType } from './video-type';

/**
 * 
 * @export
 * @interface MediaSourceInfo
 */
export interface MediaSourceInfo {
    /**
     * 
     * @type {MediaProtocol}
     * @memberof MediaSourceInfo
     */
    'Protocol'?: MediaProtocol;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'Id'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'Path'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'EncoderPath'?: string | null;
    /**
     * 
     * @type {MediaProtocol}
     * @memberof MediaSourceInfo
     */
    'EncoderProtocol'?: MediaProtocol;
    /**
     * 
     * @type {MediaSourceType}
     * @memberof MediaSourceInfo
     */
    'Type'?: MediaSourceType;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'Container'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'Size'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'Name'?: string | null;
    /**
     * Gets or sets a value indicating whether the media is remote.  Differentiate internet url vs local network.
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'IsRemote'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'ETag'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'RunTimeTicks'?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'ReadAtNativeFramerate'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'IgnoreDts'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'IgnoreIndex'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'GenPtsInput'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'SupportsTranscoding'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'SupportsDirectStream'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'SupportsDirectPlay'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'IsInfiniteStream'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'UseMostCompatibleTranscodingProfile'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'RequiresOpening'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'OpenToken'?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'RequiresClosing'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'LiveStreamId'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'BufferMs'?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'RequiresLooping'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'SupportsProbing'?: boolean;
    /**
     * 
     * @type {VideoType}
     * @memberof MediaSourceInfo
     */
    'VideoType'?: VideoType;
    /**
     * 
     * @type {IsoType}
     * @memberof MediaSourceInfo
     */
    'IsoType'?: IsoType;
    /**
     * 
     * @type {Video3DFormat}
     * @memberof MediaSourceInfo
     */
    'Video3DFormat'?: Video3DFormat;
    /**
     * 
     * @type {Array<MediaStream>}
     * @memberof MediaSourceInfo
     */
    'MediaStreams'?: Array<MediaStream> | null;
    /**
     * 
     * @type {Array<MediaAttachment>}
     * @memberof MediaSourceInfo
     */
    'MediaAttachments'?: Array<MediaAttachment> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof MediaSourceInfo
     */
    'Formats'?: Array<string> | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'Bitrate'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'FallbackMaxStreamingBitrate'?: number | null;
    /**
     * 
     * @type {TransportStreamTimestamp}
     * @memberof MediaSourceInfo
     */
    'Timestamp'?: TransportStreamTimestamp;
    /**
     * 
     * @type {{ [key: string]: string | null; }}
     * @memberof MediaSourceInfo
     */
    'RequiredHttpHeaders'?: { [key: string]: string | null; } | null;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'TranscodingUrl'?: string | null;
    /**
     * 
     * @type {MediaStreamProtocol}
     * @memberof MediaSourceInfo
     */
    'TranscodingSubProtocol'?: MediaStreamProtocol;
    /**
     * 
     * @type {string}
     * @memberof MediaSourceInfo
     */
    'TranscodingContainer'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'AnalyzeDurationMs'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'DefaultAudioStreamIndex'?: number | null;
    /**
     * 
     * @type {number}
     * @memberof MediaSourceInfo
     */
    'DefaultSubtitleStreamIndex'?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof MediaSourceInfo
     */
    'HasSegments'?: boolean;
}



