/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 *
 * Jellyfin API
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { BaseItemDto } from './base-item-dto';
// May contain unused imports in some cases
// @ts-ignore
import type { ClientCapabilitiesDto } from './client-capabilities-dto';
// May contain unused imports in some cases
// @ts-ignore
import type { GeneralCommandType } from './general-command-type';
// May contain unused imports in some cases
// @ts-ignore
import type { MediaType } from './media-type';
// May contain unused imports in some cases
// @ts-ignore
import type { PlayerStateInfo } from './player-state-info';
// May contain unused imports in some cases
// @ts-ignore
import type { QueueItem } from './queue-item';
// May contain unused imports in some cases
// @ts-ignore
import type { SessionUserInfo } from './session-user-info';
// May contain unused imports in some cases
// @ts-ignore
import type { TranscodingInfo } from './transcoding-info';

/**
 * Session info DTO.
 * @export
 * @interface SessionInfoDto
 */
export interface SessionInfoDto {
    /**
     * 
     * @type {PlayerStateInfo}
     * @memberof SessionInfoDto
     */
    'PlayState'?: PlayerStateInfo;
    /**
     * Gets or sets the additional users.
     * @type {Array<SessionUserInfo>}
     * @memberof SessionInfoDto
     */
    'AdditionalUsers'?: Array<SessionUserInfo> | null;
    /**
     * 
     * @type {ClientCapabilitiesDto}
     * @memberof SessionInfoDto
     */
    'Capabilities'?: ClientCapabilitiesDto;
    /**
     * Gets or sets the remote end point.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'RemoteEndPoint'?: string | null;
    /**
     * Gets or sets the playable media types.
     * @type {Array<MediaType>}
     * @memberof SessionInfoDto
     */
    'PlayableMediaTypes'?: Array<MediaType>;
    /**
     * Gets or sets the id.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'Id'?: string | null;
    /**
     * Gets or sets the user id.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'UserId'?: string;
    /**
     * Gets or sets the username.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'UserName'?: string | null;
    /**
     * Gets or sets the type of the client.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'Client'?: string | null;
    /**
     * Gets or sets the last activity date.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'LastActivityDate'?: string;
    /**
     * Gets or sets the last playback check in.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'LastPlaybackCheckIn'?: string;
    /**
     * Gets or sets the last paused date.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'LastPausedDate'?: string | null;
    /**
     * Gets or sets the name of the device.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'DeviceName'?: string | null;
    /**
     * Gets or sets the type of the device.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'DeviceType'?: string | null;
    /**
     * 
     * @type {BaseItemDto}
     * @memberof SessionInfoDto
     */
    'NowPlayingItem'?: BaseItemDto;
    /**
     * 
     * @type {BaseItemDto}
     * @memberof SessionInfoDto
     */
    'NowViewingItem'?: BaseItemDto;
    /**
     * Gets or sets the device id.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'DeviceId'?: string | null;
    /**
     * Gets or sets the application version.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'ApplicationVersion'?: string | null;
    /**
     * 
     * @type {TranscodingInfo}
     * @memberof SessionInfoDto
     */
    'TranscodingInfo'?: TranscodingInfo;
    /**
     * Gets or sets a value indicating whether this session is active.
     * @type {boolean}
     * @memberof SessionInfoDto
     */
    'IsActive'?: boolean;
    /**
     * Gets or sets a value indicating whether the session supports media control.
     * @type {boolean}
     * @memberof SessionInfoDto
     */
    'SupportsMediaControl'?: boolean;
    /**
     * Gets or sets a value indicating whether the session supports remote control.
     * @type {boolean}
     * @memberof SessionInfoDto
     */
    'SupportsRemoteControl'?: boolean;
    /**
     * Gets or sets the now playing queue.
     * @type {Array<QueueItem>}
     * @memberof SessionInfoDto
     */
    'NowPlayingQueue'?: Array<QueueItem> | null;
    /**
     * Gets or sets the now playing queue full items.
     * @type {Array<BaseItemDto>}
     * @memberof SessionInfoDto
     */
    'NowPlayingQueueFullItems'?: Array<BaseItemDto> | null;
    /**
     * Gets or sets a value indicating whether the session has a custom device name.
     * @type {boolean}
     * @memberof SessionInfoDto
     */
    'HasCustomDeviceName'?: boolean;
    /**
     * Gets or sets the playlist item id.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'PlaylistItemId'?: string | null;
    /**
     * Gets or sets the server id.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'ServerId'?: string | null;
    /**
     * Gets or sets the user primary image tag.
     * @type {string}
     * @memberof SessionInfoDto
     */
    'UserPrimaryImageTag'?: string | null;
    /**
     * Gets or sets the supported commands.
     * @type {Array<GeneralCommandType>}
     * @memberof SessionInfoDto
     */
    'SupportedCommands'?: Array<GeneralCommandType>;
}

